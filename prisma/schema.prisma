generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  lastName  String
  phone     String?
  addresses String?
  role      String   @default("user")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Direcciones del usuario
// Mas adelante ver esta posibilidad
// model Address {
//   id         String  @id @default(uuid()) @db.Uuid
//   street     String
//   postalCode String
//   city       String
//   province   String
//   country    String
//   userId     String  @db.Uuid
//   user       User    @relation(fields: [userId], references: [id])
// }

// Producto
model Product {
  id                 Int        @id @default(autoincrement())
  name               String
  slug               String
  description        String
  cost               Decimal?
  price              Decimal    @db.Decimal(10, 2)
  promotionalPrice   Decimal?   @db.Decimal(10, 2)
  discountPercentage Decimal?   @db.Decimal(5, 2)
  stock              Int
  isActive           Boolean    @default(true)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  brand              Brand?     @relation(fields: [brandId], references: [id])
  brandId            Int?
  images             Image[] // Relación 1:N con imágenes
  categories         Category[] // Relacion M:M
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}
