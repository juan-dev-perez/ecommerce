generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  lastName  String
  role      String   @default("user")
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  addresses String?
  isActive  Boolean  @default(true)
}

model Product {
  id                 Int                      @id @default(autoincrement())
  name               String
  slug               String
  description        String
  cost               Decimal?
  price              Decimal                  @db.Decimal(10, 2)
  promotionalPrice   Decimal?                 @db.Decimal(10, 2)
  discountPercentage Decimal?                 @db.Decimal(5, 2)
  stock              Int
  isActive           Boolean                  @default(true)
  createdAt          DateTime                 @default(now())
  updatedAt          DateTime                 @updatedAt
  
  images             Image[]
  brandId            Int?
  brand              Brand?                   @relation(fields: [brandId], references: [id])
  categoryId         Int?
  category           Category?                @relation(fields: [categoryId], references: [id])
  
  search_vector      Unsupported("tsvector")?
  @@index([search_vector], type: Gin)
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String
  logo      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String
  slug        String     @unique
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  parentId    Int?
  parent      Category?  @relation("SubCategories", fields: [parentId], references: [id])
  subCategory Category[] @relation("SubCategories")
  product     Product[]
}